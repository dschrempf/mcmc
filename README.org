* Markov chain Monte Carlo sampler

#+html: <p align="center"><img src="https://travis-ci.org/dschrempf/mcmc.svg?branch=master"/></p>

Sample from a posterior using Markov chain Monte Carlo (MCMC) methods.

At the moment, the library is tailored to the Metropolis-Hastings-Green
algorithm since it covers most use cases. More algorithms will be implemented
soon.

** Documentation
The [[https://hackage.haskell.org/package/mcmc][source code]] contains detailed documentation about general concepts as well
as specific functions.

** Examples
[[https://github.com/dschrempf/mcmc/tree/master/mcmc-examples][Example MCMC analyses]] can be built with [[https://docs.haskellstack.org/en/stable/README/][Stack]] and are attached to this
repository.
#+name: Build
#+begin_src sh :exports code :results none
git clone https://github.com/dschrempf/mcmc.git
cd mcmc
stack build
#+end_src

For example, estimate the [[https://github.com/dschrempf/mcmc/blob/master/mcmc-examples/Archery/Archery.hs][accuracy of an archer]] with
#+name: Archery
#+begin_src sh :exports code :results none
stack exec archery
#+end_src

** Ideas                                                             :noexport:

*** Marginal likelihood
E.g., stepping stone (see RevBayes).

*** Proposals on tree topologies.
- NNI.
- Narrow. What is this? See RevBayes.
- FNPR (same here).

General questions: How do we handle changing topologies? Then, the node paths
change, and everything is messed up.
